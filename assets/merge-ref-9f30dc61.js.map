{"version":3,"file":"merge-ref-9f30dc61.js","sources":["../../packages/system/src/merge-ref.ts"],"sourcesContent":["// thx chakra-ui\nimport { MutableRefObject, Ref, RefObject } from \"react\"\nimport { isFunction } from \"./is\"\n\ntype ReactRef<T> = Ref<T> | RefObject<T> | MutableRefObject<T>\n\n/**\n * Assigns a value to a ref function or object\n *\n * @param ref the ref to assign to\n * @param value the value\n */\nfunction assignRef<T = any>(ref: ReactRef<T> | undefined, value: T) {\n  if (ref == null) return\n\n  if (isFunction(ref)) {\n    ref(value)\n    return\n  }\n\n  try {\n    // @ts-ignore\n    ref.current = value\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`)\n  }\n}\n\n/**\n * Combine multiple React refs into a single ref function.\n * This is used mostly when you need to allow consumers forward refs to\n * internal components\n *\n * @param refs refs to assign to value to\n */\nexport function mergeRefs<T>(...refs: (ReactRef<T> | undefined)[]) {\n  return (node: T | null) => {\n    refs.forEach((ref) => assignRef(ref, node))\n  }\n}\n"],"names":["assignRef","ref","value","isFunction","mergeRefs","refs","node"],"mappings":"qCAYA,SAASA,EAAmBC,EAA8BC,EAAU,CAClE,GAAID,GAAO,KAEP,IAAAE,EAAWF,CAAG,EAAG,CACnBA,EAAIC,CAAK,EACT,MACF,CAEI,GAAA,CAEFD,EAAI,QAAUC,OACA,CACd,MAAM,IAAI,MAAM,wBAAwBA,CAAK,aAAaD,CAAG,GAAG,CAClE,EACF,CASO,SAASG,KAAgBC,EAAmC,CACjE,OAAQC,GAAmB,CACzBD,EAAK,QAASJ,GAAQD,EAAUC,EAAKK,CAAI,CAAC,CAAA,CAE9C"}