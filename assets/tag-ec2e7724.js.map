{"version":3,"file":"tag-ec2e7724.js","sources":["../../../../packages/tag/src/style.ts","../../../../packages/tag/src/tag.tsx"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\"\nimport { TagColorScheme, TagVariant, TagSize } from \"./interface\"\nimport { globalColor, zwebPrefix } from \"@zweb-design/theme\"\n\nexport const tagContainer = css`\n  display: inline-flex;\n  vertical-align: middle;\n  white-space: nowrap;\n  flex-direction: row;\n  align-items: center;\n  padding: 0 7px;\n`\n\nexport const tagSizeLargeStyle = css`\n  font-size: 14px;\n  line-height: 22px;\n  height: 32px;\n`\n\nexport const tagSizeMediumStyle = css`\n  font-size: 14px;\n  line-height: 22px;\n  height: 22px;\n`\n\nexport const tagSizeSmallStyle = css`\n  font-size: 12px;\n  line-height: 18px;\n  height: 18px;\n`\n\nexport const tagContentStyle = css`\n  font-size: inherit;\n  line-height: inherit;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nexport const leftIcon = css`\n  width: 12px;\n  font-size: 12px;\n  height: 12px;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  margin-right: 4px;\n`\n\nexport const closeIcon = css`\n  font-size: 7px;\n  margin-left: 4px;\n  display: inline-flex;\n  align-items: center;\n  padding: 3px;\n  border-radius: 50%;\n\n  &:hover {\n    background-color: ${globalColor(`--${zwebPrefix}-grayBlue-07`)};\n    cursor: pointer;\n  }\n`\n\nexport function applyCloseIcon(\n  color: TagColorScheme,\n  size: TagSize,\n  variant: TagVariant,\n): SerializedStyles {\n  let sizeCss: SerializedStyles\n  let variantCss: SerializedStyles = css()\n  if (size === \"small\") {\n    sizeCss = css({ padding: \"2px\" })\n  } else {\n    sizeCss = css({ padding: \"4px\" })\n  }\n  if (variant === \"fill\") {\n    variantCss = css`\n      &:hover {\n        background-color: ${globalColor(`--${zwebPrefix}-white-07`)};\n      }\n    `\n  } else if (variant === \"outline\") {\n    if (color === \"gray\" || color === \"grayBlue\") {\n      variantCss = css`\n        &:hover {\n          background-color: ${globalColor(`--${zwebPrefix}-${color}-08`)};\n        }\n      `\n    }\n  }\n\n  return css`\n    margin-left: 4px;\n    display: inline-flex;\n    align-items: center;\n    padding: 3px;\n    border-radius: 50%;\n\n    &:hover {\n      background-color: ${globalColor(`--${zwebPrefix}-${color}-06`)};\n      cursor: pointer;\n    }\n\n    ${sizeCss}\n    ${variantCss}\n  `\n}\n\nexport const colors: TagColorScheme[] = [\n  \"white\",\n  \"blackAlpha\",\n  \"gray\",\n  \"grayBlue\",\n  \"red\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"blue\",\n  \"cyan\",\n  \"purple\",\n  \"techPurple\",\n  \"techPink\",\n]\n\nexport function tagOutlinePrepare(color: TagColorScheme): SerializedStyles {\n  if (color == \"gray\" || color == \"grayBlue\") {\n    return css`\n      border-radius: 4px;\n      border: solid 1px ${globalColor(`--${zwebPrefix}-${color}-08`)};\n      color: ${globalColor(`--${zwebPrefix}-${color}-02`)};\n    `\n  } else {\n    return css`\n      border-radius: 4px;\n      border: solid 1px ${globalColor(`--${zwebPrefix}-${color}-01`)};\n      color: ${globalColor(`--${zwebPrefix}-${color}-01`)};\n    `\n  }\n}\n\nexport function tagFillPrepare(color: TagColorScheme): SerializedStyles {\n  return css`\n    background-color: ${globalColor(`--${zwebPrefix}-${color}-01`)};\n    color: ${globalColor(`--${zwebPrefix}-white-01`)};\n    border-radius: 4px;\n  `\n}\n\nexport function tagLightPrepare(color: TagColorScheme): SerializedStyles {\n  if (color == \"grayBlue\") {\n    return css`\n      border-radius: 4px;\n      background-color: ${globalColor(`--${zwebPrefix}-${color}-09`)};\n      color: ${globalColor(`--${zwebPrefix}-${color}-02`)};\n    `\n  } else {\n    return css`\n      border-radius: 4px;\n      background-color: ${globalColor(`--${zwebPrefix}-${color}-07`)};\n      color: ${globalColor(`--${zwebPrefix}-${color}-01`)};\n    `\n  }\n}\n\nexport function tagFillNormal(\n  color: Extract<TagColorScheme, string>,\n): SerializedStyles {\n  return css`\n    border-radius: 4px;\n    color: ${globalColor(`--${zwebPrefix}-white-01`)};\n    background-color: ${color};\n  `\n}\n\nexport function tagOutlineNormal(\n  color: Extract<TagColorScheme, string>,\n): SerializedStyles {\n  return css`\n    border-radius: 4px;\n    color: ${color};\n    border: solid 1px ${color};\n  `\n}\n","import { forwardRef, useState } from \"react\"\nimport { TagProps } from \"./interface\"\nimport { css, SerializedStyles } from \"@emotion/react\"\nimport { CloseIcon } from \"@zweb-design/icon\"\nimport { omit } from \"@zweb-design/system\"\nimport {\n  applyCloseIcon,\n  colors,\n  leftIcon,\n  tagContainer,\n  tagContentStyle,\n  tagFillNormal,\n  tagFillPrepare,\n  tagLightPrepare,\n  tagOutlineNormal,\n  tagOutlinePrepare,\n  tagSizeLargeStyle,\n  tagSizeMediumStyle,\n  tagSizeSmallStyle,\n} from \"./style\"\nimport { applyBoxStyle, deleteCssProps } from \"@zweb-design/theme\"\n\nexport const Tag = forwardRef<HTMLDivElement, TagProps>((props, ref) => {\n  const {\n    visible,\n    colorScheme = \"gray\",\n    size = \"medium\",\n    variant = \"light\",\n    closable,\n    ...rest\n  } = props\n\n  const otherProps = omit(rest, [\"onClose\", \"icon\"])\n\n  let variantCss: SerializedStyles\n\n  const [realVisible, setRealVisible] = useState(true)\n\n  // variant\n  if (colors.includes(colorScheme)) {\n    switch (variant) {\n      case \"light\": {\n        variantCss = tagLightPrepare(colorScheme)\n        break\n      }\n      case \"fill\": {\n        variantCss = tagFillPrepare(colorScheme)\n        break\n      }\n      case \"outline\": {\n        variantCss = tagOutlinePrepare(colorScheme)\n        break\n      }\n    }\n  } else {\n    switch (variant) {\n      case \"light\":\n      case \"fill\": {\n        variantCss = tagFillNormal(colorScheme)\n        break\n      }\n      case \"outline\": {\n        variantCss = tagOutlineNormal(colorScheme)\n        break\n      }\n    }\n  }\n\n  // size\n  let sizeCss: SerializedStyles\n  switch (size) {\n    case \"small\": {\n      sizeCss = tagSizeSmallStyle\n      break\n    }\n    case \"medium\": {\n      sizeCss = tagSizeMediumStyle\n      break\n    }\n    case \"large\": {\n      sizeCss = tagSizeLargeStyle\n      break\n    }\n  }\n\n  const finalStyle = css`\n    ${tagContainer};\n    ${variantCss};\n    ${sizeCss};\n  `\n\n  return (visible == undefined ? realVisible : visible) ? (\n    <div\n      css={[finalStyle, applyBoxStyle(props)]}\n      ref={ref}\n      {...deleteCssProps(otherProps)}\n    >\n      {props.icon && <span css={leftIcon}>{props.icon}</span>}\n      <span css={tagContentStyle}>{props.children}</span>\n      {props.closable && (\n        <span\n          css={applyCloseIcon(colorScheme, size, variant)}\n          onClick={(e) => {\n            if (props.onClose != undefined) {\n              props.onClose(e)\n            }\n            if (visible == undefined) {\n              setRealVisible(false)\n            }\n          }}\n        >\n          <CloseIcon size=\"8px\" />\n        </span>\n      )}\n    </div>\n  ) : null\n})\n\nTag.displayName = \"Tag\"\n"],"names":["tagContainer","css","tagSizeLargeStyle","tagSizeMediumStyle","tagSizeSmallStyle","tagContentStyle","leftIcon","globalColor","zwebPrefix","applyCloseIcon","color","size","variant","sizeCss","variantCss","colors","tagOutlinePrepare","tagFillPrepare","tagLightPrepare","tagFillNormal","tagOutlineNormal","Tag","forwardRef","props","ref","visible","colorScheme","closable","rest","otherProps","omit","realVisible","setRealVisible","useState","finalStyle","jsxs","applyBoxStyle","deleteCssProps","jsx","e","CloseIcon"],"mappings":"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"}