{"version":3,"file":"input-number.stories-f6d08670.js","sources":["../../../../packages/input-number/src/style.ts","../../../../packages/input-number/src/input-number.tsx"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\"\nimport { getColor } from \"@zweb-design/theme\"\nimport { InputNumberSize } from \"./interface\"\n\nexport const controlContainerStyle = css`\n  transition: all 0.2s ease-in-out;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  visibility: hidden;\n`\n\nexport function applyControlBlockStyle(\n  direction: \"up\" | \"bottom\",\n  size: InputNumberSize,\n): SerializedStyles {\n  return css`\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n    width: 18px;\n    height: ${size === \"small\" ? \"9px\" : \"11px\"};\n    border-radius: ${direction === \"up\" ? \"3px 3px 0 0\" : \"0 0 3px 3px\"};\n    background-color: ${getColor(\"grayBlue\", \"09\")};\n    font-size: 10px;\n    color: ${getColor(\"grayBlue\", \"04\")};\n\n    &:hover {\n      background-color: ${getColor(\"grayBlue\", \"07\")};\n    }\n  `\n}\n\nexport const hoverControlStyle = css`\n  &:hover {\n    .control {\n      visibility: visible;\n    }\n  }\n`\n\nexport function applyActionIconStyle(size: InputNumberSize): SerializedStyles {\n  return css`\n    font-size: 12px;\n    margin-left: ${size === \"large\" ? \"-2px\" : \"-6px\"};\n    margin-right: ${size === \"large\" ? \"-2px\" : \"-6px\"};\n    color: ${getColor(\"grayBlue\", \"05\")};\n    &:active {\n      color: ${getColor(\"grayBlue\", \"02\")};\n    }\n  `\n}\n","import {\n  forwardRef,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\nimport { InputNumberProps } from \"./interface\"\nimport { Input } from \"@zweb-design/input\"\nimport { DownIcon, MinusIcon, PlusIcon, UpIcon } from \"@zweb-design/icon\"\nimport { Space } from \"@zweb-design/space\"\nimport { isNumber } from \"@zweb-design/system\"\nimport {\n  applyActionIconStyle,\n  applyControlBlockStyle,\n  controlContainerStyle,\n  hoverControlStyle,\n} from \"./style\"\n\nexport const InputNumber = forwardRef<HTMLInputElement, InputNumberProps>(\n  (props, ref) => {\n    const {\n      size = \"medium\",\n      colorScheme = \"blue\",\n      disabled,\n      precision,\n      error,\n      hideControl,\n      readOnly,\n      max = Number.MAX_SAFE_INTEGER,\n      min = Number.MIN_SAFE_INTEGER,\n      step = 1,\n      onBlur,\n      onFocus,\n      placeholder,\n      mode = \"embed\",\n      prefix,\n      suffix,\n      defaultValue,\n      value,\n      icons,\n      formatter,\n      parser,\n      onChange,\n      ...otherProps\n    } = props\n\n    const [finalValue, setFinalValue] = useState<string | number>(\n      value ?? defaultValue ?? \"\",\n    )\n\n    useEffect(() => {\n      if (value === undefined) {\n        return\n      }\n      setFinalValue(value ?? \"\")\n    }, [value])\n\n    const inputRef =\n      useRef<HTMLInputElement>() as MutableRefObject<HTMLInputElement>\n\n    const plusStep = useCallback((): void => {\n      const currentNumber = Number(finalValue)\n\n      if (!isNumber(currentNumber)) {\n        if (0 <= max && 0 >= min) {\n          if (value === undefined) {\n            setFinalValue(0)\n          }\n          onChange?.(0)\n        } else {\n          if (value === undefined) {\n            setFinalValue(min)\n          }\n          onChange?.(min)\n        }\n        return\n      }\n\n      if (currentNumber + step <= max && currentNumber + step >= min) {\n        if (value === undefined) {\n          setFinalValue(currentNumber + step)\n        }\n        onChange?.(currentNumber + step)\n      }\n    }, [finalValue, max, min, onChange, setFinalValue, step, value])\n    const minusStep = useCallback((): void => {\n      const currentNumber = Number(finalValue)\n\n      if (!isNumber(currentNumber)) {\n        if (0 <= max && 0 >= min) {\n          if (value === undefined) {\n            setFinalValue(0)\n          }\n          onChange?.(0)\n        } else {\n          if (value === undefined) {\n            setFinalValue(min)\n          }\n          onChange?.(min)\n        }\n        return\n      }\n\n      if (currentNumber - step <= max && currentNumber - step >= min) {\n        if (value === undefined) {\n          setFinalValue(currentNumber - step)\n        }\n        onChange?.(currentNumber - step)\n      }\n    }, [finalValue, max, min, onChange, setFinalValue, step, value])\n\n    const control = (\n      <div className=\"control\" css={controlContainerStyle}>\n        <div\n          css={applyControlBlockStyle(\"up\", size)}\n          onClick={() => {\n            plusStep()\n          }}\n        >\n          {icons?.up ?? <UpIcon />}\n        </div>\n        <div\n          css={applyControlBlockStyle(\"bottom\", size)}\n          onClick={() => {\n            minusStep()\n          }}\n        >\n          {icons?.down ?? <DownIcon />}\n        </div>\n      </div>\n    )\n\n    const dealNumber = () => {\n      if (!isNumber(Number(finalValue))) {\n        if (0 <= max && 0 >= min) {\n          if (value === undefined) {\n            setFinalValue(0)\n          }\n          onChange?.(0)\n        } else {\n          if (value === undefined) {\n            setFinalValue(min)\n          }\n          onChange?.(min)\n        }\n        return\n      }\n      if (precision !== undefined) {\n        let num = Number(Number(finalValue).toFixed(precision))\n        num = Math.max(num, min)\n        num = Math.min(num, max)\n        if (value === undefined) {\n          setFinalValue(num)\n        }\n        onChange?.(num)\n      } else {\n        let num = Number(finalValue)\n        num = Math.max(num, min)\n        num = Math.min(num, max)\n        if (value === undefined) {\n          setFinalValue(num)\n        }\n        onChange?.(num)\n      }\n    }\n\n    return (\n      <Input\n        ref={ref}\n        inputRef={inputRef}\n        _css={hoverControlStyle}\n        size={size}\n        value={formatter ? formatter(finalValue) : finalValue}\n        onChange={(e) => {\n          setFinalValue(parser ? parser(e) : e)\n        }}\n        onPressEnter={() => {\n          inputRef.current.blur()\n        }}\n        onBlur={(e) => {\n          dealNumber()\n          onBlur?.(e)\n        }}\n        onFocus={(e) => {\n          onFocus?.(e)\n        }}\n        readOnly={readOnly}\n        placeholder={placeholder}\n        prefix={prefix}\n        suffix={\n          <Space mr=\"-8px\">\n            {suffix}\n            {!hideControl &&\n              !readOnly &&\n              !disabled &&\n              mode === \"embed\" &&\n              control}\n          </Space>\n        }\n        addBefore={\n          mode === \"button\" ? (\n            <span\n              css={applyActionIconStyle(size)}\n              onClick={() => {\n                minusStep()\n              }}\n            >\n              {icons?.minus ?? <MinusIcon />}\n            </span>\n          ) : undefined\n        }\n        addAfter={\n          mode === \"button\" ? (\n            <span\n              css={applyActionIconStyle(size)}\n              onClick={() => {\n                plusStep()\n              }}\n            >\n              {icons?.plus ?? <PlusIcon />}\n            </span>\n          ) : undefined\n        }\n        colorScheme={colorScheme}\n        disabled={disabled}\n        error={error}\n        {...otherProps}\n      />\n    )\n  },\n)\n\nInputNumber.displayName = \"InputNumber\"\n"],"names":["controlContainerStyle","css","applyControlBlockStyle","direction","size","getColor","hoverControlStyle","applyActionIconStyle","InputNumber","forwardRef","props","ref","colorScheme","disabled","precision","error","hideControl","readOnly","max","min","step","onBlur","onFocus","placeholder","mode","prefix","suffix","defaultValue","value","icons","formatter","parser","onChange","otherProps","finalValue","setFinalValue","useState","useEffect","inputRef","useRef","plusStep","useCallback","currentNumber","isNumber","minusStep","control","jsxs","jsx","UpIcon","DownIcon","dealNumber","num","Input","e","Space","MinusIcon","PlusIcon"],"mappings":"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"}