{"version":3,"file":"radio-99a0c4e8.js","sources":["../../packages/radio/src/radio-group-context.tsx","../../packages/radio/src/style.ts","../../packages/radio/src/radio.tsx"],"sourcesContent":["import { ChangeEvent, createContext } from \"react\"\nimport { RadioGroupContextProps } from \"./interface\"\n\ninterface extraProps {\n  onChangeValue?: (value: any, event: ChangeEvent) => void\n}\n\nexport const RadioGroupContext = createContext<\n  (RadioGroupContextProps<any> & extraProps) | undefined\n>(undefined)\n\nRadioGroupContext.displayName = \"RadioGroupContext\"\n","import { getColor, globalColor, illaPrefix } from \"@illa-design/theme\"\nimport {\n  RadioColorScheme,\n  RadioGroupDirection,\n  RadioGroupSpacing,\n  RadioGroupType,\n  RadioStatus,\n} from \"./interface\"\nimport { css, SerializedStyles } from \"@emotion/react\"\nimport { ReactNode } from \"react\"\n\n// default radio\nexport function applyRadioSize(\n  colorScheme: RadioColorScheme,\n): SerializedStyles {\n  return css`\n    position: relative;\n    appearance: none;\n    border-radius: 50%;\n    margin: auto 8px auto auto;\n    width: 16px;\n    height: 16px;\n    border: solid 2px ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n    cursor: pointer;\n    transition: 0.15s all linear;\n\n    &:hover {\n      border-color: ${getColor(colorScheme, \"06\")};\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n      border-color: ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n      background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n    }\n\n    &:checked {\n      border: 4px solid ${getColor(colorScheme, \"01\")};\n\n      &:hover {\n        border-color: ${getColor(colorScheme, \"02\")};\n      }\n\n      &:disabled {\n        border-color: ${getColor(colorScheme, \"05\")};\n      }\n    }\n  `\n}\n\nexport function applyMergeCss(stateValue?: RadioStatus): SerializedStyles {\n  const currentDisabled = stateValue?.disabled ?? false\n\n  return css`\n    display: inline-flex;\n    overflow: hidden;\n    word-wrap: break-word;\n    white-space: nowrap;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    line-height: 22px;\n    color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n    cursor: ${currentDisabled ? \"not-allowed\" : \"pointer\"};\n  `\n}\n\nexport function applyRadioContainerHorizontal(\n  spacing: string | number,\n): SerializedStyles {\n  const currentSpacing = typeof spacing === \"string\" ? spacing : `${spacing}px`\n\n  return css`\n    display: inline-flex;\n    vertical-align: middle;\n    flex-direction: row;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 6px ${currentSpacing};\n  `\n}\n\nexport function applyRadioContainerVertical(\n  spacing: string | number,\n): SerializedStyles {\n  const currentSpacing = typeof spacing === \"string\" ? spacing : `${spacing}px`\n\n  return css`\n    display: inline-flex;\n    vertical-align: middle;\n    flex-direction: column;\n    align-items: flex-start;\n    flex-wrap: wrap;\n    gap: 6px ${currentSpacing};\n  `\n}\n\n// RadioButton\nexport const disappear = css`\n  position: absolute;\n  appearance: none;\n  opacity: 0;\n  width: 0;\n  height: 0;\n  top: 0;\n  left: 0;\n\n  &:target {\n    background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n  }\n`\n\nexport function applyRadioButtonContainer(\n  hasChildren?: ReactNode,\n): SerializedStyles {\n  return css`\n    border-radius: 8px;\n    display: ${hasChildren ? \"inline-flex\" : \"none\"};\n    vertical-align: middle;\n    flex-direction: row;\n    align-items: center;\n    gap: 1px;\n    font-size: 14px;\n    color: ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n    background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n    padding: 2px;\n  `\n}\n\nexport function applyRadioButton(stateValue: RadioStatus): SerializedStyles {\n  const { colorScheme = \"blue\" } = stateValue\n  let sizeCss, stateCss\n  switch (stateValue?.size) {\n    case \"small\":\n      sizeCss = css`\n        padding: 1px 8px;\n        height: 20px;\n      `\n      break\n    case \"medium\":\n      sizeCss = css`\n        padding: 5px 12px;\n        height: 28px;\n      `\n      break\n    case \"large\":\n      sizeCss = css`\n        padding: 9px 16px;\n        height: 36px;\n      `\n      break\n  }\n  const checkedColor =\n    colorScheme === \"gray\" || colorScheme === \"grayBlue\"\n      ? globalColor(`--${illaPrefix}-${colorScheme}-02`)\n      : getColor(colorScheme, \"03\")\n\n  if (stateValue?.disabled && stateValue?.checked) {\n    stateCss = css`\n      color: ${getColor(colorScheme, \"06\")};\n      cursor: not-allowed;\n    `\n  } else if (stateValue?.disabled) {\n    stateCss = css`\n      color: ${globalColor(`--${illaPrefix}-grayBlue-05`)};\n      cursor: not-allowed;\n    `\n  } else if (stateValue?.checked) {\n    stateCss = css`\n      font-weight: 500;\n      border-radius: 7px;\n      color: ${checkedColor};\n      background-color: ${globalColor(`--${illaPrefix}-white-01`)};\n      box-shadow: 0px 0px 2px 0px rgba(29, 33, 41, 0.24);\n\n      &::before,\n      & + label::before {\n        opacity: 0;\n      }\n    `\n  } else {\n    stateCss = css`\n      &:hover {\n        border-radius: 7px;\n        background-color: ${globalColor(`--${illaPrefix}-white-01`)};\n        box-shadow: 0px 0px 2px 0px rgba(29, 33, 41, 0.24);\n      }\n    `\n  }\n\n  const equalStyle = stateValue.forceEqualWidth\n    ? css`\n        flex: 1;\n      `\n    : css``\n\n  return css`\n    ${equalStyle};\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    cursor: pointer;\n    transition: 0.15s all linear;\n    white-space: nowrap;\n    min-width: 0;\n    overflow: hidden;\n\n    &:hover::before,\n    &:hover + &::before {\n      opacity: 0;\n    }\n\n    &:not(:first-of-type):before {\n      position: absolute;\n      top: 50%;\n      left: 0;\n      transform: translateY(-50%);\n      display: block;\n      height: ${stateValue?.size === \"large\" ? \"16px\" : \"12px\"};\n      width: 1px;\n      background-color: ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n      content: \"\";\n      transition: all 0.1s linear;\n    }\n\n    ${sizeCss}\n    ${stateCss}\n  `\n}\n\nexport const applyRadioContainerCss = (\n  stateValue: RadioStatus,\n  type?: RadioGroupType,\n): SerializedStyles => {\n  return type === \"button\"\n    ? applyRadioButton(stateValue)\n    : applyMergeCss(stateValue)\n}\n\nexport const applyRadioCss = (\n  colorScheme: RadioColorScheme,\n  type?: RadioGroupType,\n): SerializedStyles => {\n  return type === \"button\" ? disappear : applyRadioSize(colorScheme)\n}\n\nexport const applyRadioGroupCss = (styleProps: {\n  hasChildren: ReactNode\n  direction: RadioGroupDirection\n  spacing: RadioGroupSpacing\n  type?: RadioGroupType\n}): SerializedStyles => {\n  const { hasChildren, direction, spacing, type } = styleProps\n  let radioGroupCss: SerializedStyles\n\n  if (type === \"button\") {\n    radioGroupCss = applyRadioButtonContainer(hasChildren)\n  } else {\n    switch (direction) {\n      case \"vertical\":\n        radioGroupCss = applyRadioContainerVertical(spacing)\n        break\n      case \"horizontal\":\n        radioGroupCss = applyRadioContainerHorizontal(spacing)\n        break\n    }\n  }\n  return radioGroupCss\n}\n\nexport const radioTextCss = css`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n","import { ChangeEvent, forwardRef, useContext } from \"react\"\nimport { useMergeValue } from \"@illa-design/system\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\nimport { RadioProps } from \"./interface\"\nimport { RadioGroupContext } from \"./radio-group-context\"\nimport { applyRadioContainerCss, applyRadioCss, radioTextCss } from \"./style\"\n\nexport const Radio = forwardRef<HTMLLabelElement, RadioProps>((props, ref) => {\n  const context = useContext(RadioGroupContext)\n  const mergeProps = { ...props }\n  const {\n    children,\n    checked,\n    disabled,\n    value,\n    colorScheme = context?.colorScheme ?? \"blue\",\n    onChange,\n    ...otherProps\n  } = mergeProps\n\n  if (context) {\n    mergeProps.checked = context?.value === props?.value\n    mergeProps.disabled = !!(context?.disabled || props?.disabled)\n  }\n\n  const [currentChecked, setCurrentChecked] = useMergeValue(false, {\n    value: mergeProps.checked,\n    defaultValue: mergeProps.defaultChecked,\n  })\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (context) {\n      context.onChangeValue && context.onChangeValue(value, event)\n    } else if (!(\"checked\" in props) && !currentChecked) {\n      setCurrentChecked(true)\n    }\n    !currentChecked && onChange && onChange(true, event)\n  }\n\n  const stateValue = {\n    checked: currentChecked,\n    size: context?.size,\n    disabled: !!(context?.disabled || props?.disabled),\n    forceEqualWidth: context?.forceEqualWidth,\n    colorScheme,\n  }\n\n  return (\n    <label\n      css={[\n        applyRadioContainerCss(stateValue, context?.type),\n        applyBoxStyle(props),\n      ]}\n      ref={ref}\n      {...deleteCssProps(otherProps)}\n    >\n      <input\n        type=\"radio\"\n        {...(context?.name ? { name: context.name } : {})}\n        css={applyRadioCss(colorScheme, context?.type)}\n        value={value || \"\"}\n        checked={currentChecked}\n        disabled={disabled}\n        onChange={onChangeValue}\n      />\n      <span css={radioTextCss}>{children}</span>\n    </label>\n  )\n})\n\nRadio.displayName = \"Radio\"\n"],"names":["RadioGroupContext","createContext","applyRadioSize","colorScheme","css","globalColor","illaPrefix","getColor","applyMergeCss","stateValue","currentDisabled","applyRadioContainerHorizontal","spacing","currentSpacing","applyRadioContainerVertical","disappear","applyRadioButtonContainer","hasChildren","applyRadioButton","sizeCss","stateCss","checkedColor","equalStyle","applyRadioContainerCss","type","applyRadioCss","applyRadioGroupCss","styleProps","direction","radioGroupCss","radioTextCss","Radio","forwardRef","props","ref","context","useContext","mergeProps","children","checked","disabled","value","onChange","otherProps","currentChecked","setCurrentChecked","useMergeValue","onChangeValue","event","jsxs","applyBoxStyle","deleteCssProps","jsx"],"mappings":"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"}